@page "/"
@using MauiBlazorWeb.Shared.Interfaces
@inject IDefaultSettings DefaultSettings

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" @bind="silentChecked">
    <label class="form-check-label" for="flexSwitchCheckDefault">Silencioso temporário</label>
    <br />
    @if (silentChecked)
    {
        <span>@timeLeft</span>
    }
</div>

@code {

    private bool _silentChecked { get; set; }
    private Timer? _timer;
    private TimeSpan _timeLeft;
    private string timeLeft => _timeLeft.ToString(@"mm\:ss");

    private bool silentChecked
    {
        get => _silentChecked;
        set
        {
            if (_silentChecked != value)
            {
                _silentChecked = value;
                OnSilentCheckedChanged();
            }
        }
    }

    private void OnSilentCheckedChanged()
    {
        if (silentChecked)
        {
            var defaultTime = DefaultSettings.GetDefaultSilentInterval();
            _timeLeft = TimeSpan.FromSeconds(defaultTime);
            StartTimer();
        }
        else
        {
            StopTimer();
        }
    }

    private void StartTimer()
    {
        _timer = new Timer(TimerCallback, null, 1000, 1000);
    }

    private void StopTimer()
    {
        _timer?.Dispose();
        _timer = null;
    }

    private void TimerCallback(object state)
    {
        if (_timeLeft.TotalSeconds > 0)
        {
            _timeLeft = _timeLeft.Add(TimeSpan.FromSeconds(-1));
            InvokeAsync(StateHasChanged);
        }
        else
        {
            StopTimer();
            _silentChecked = false;
            InvokeAsync(StateHasChanged);
        }
    }

    protected override void OnInitialized()
    {
        _timeLeft = TimeSpan.Zero;
    }
}
